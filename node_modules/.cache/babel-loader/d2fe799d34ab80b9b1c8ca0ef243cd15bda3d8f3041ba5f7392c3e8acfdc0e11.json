{"ast":null,"code":"import { TOGGLE_EDITABLE, EDIT_DATA, SET_TYPEC, REMOVE_BOX, SAVE_DOCS_CONTENT, PROJECT_ERROR } from \"./actionTypes\";\nimport store from \"../store\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nexport const toggleedit = indx => dispatch => {\n  let {\n    docs: {\n      editable,\n      contents\n    },\n    project: {\n      doc_id,\n      project_id\n    },\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  if (editable[indx] === true) {\n    const req = {\n      ...contents[indx],\n      user_email: user.email,\n      project_id: project_id\n    };\n    axios.post(config.SERVER + \"/docs/saveBox\", req, {\n      headers: {\n        Authorization: token\n      }\n    }).then(res => {\n      if (res.data.success === false) throw Error(\"Error\");\n    }).catch(err => {\n      console.log(err);\n      if (err.response && err.response.data === \"Unauthorized\") {\n        dispatch({\n          data: true,\n          type: PROJECT_ERROR\n        });\n      }\n    });\n  }\n  editable[indx] = !editable[indx];\n  dispatch({\n    data: editable,\n    type: TOGGLE_EDITABLE\n  });\n};\nexport const editdata = (content, indx, typec) => dispatch => {\n  let contents = store.getState().docs.contents;\n  contents[indx][typec] = content;\n  dispatch({\n    data: contents,\n    type: EDIT_DATA\n  });\n};\nexport const addbox = () => dispatch => {\n  let {\n    docs: {\n      contents,\n      editable\n    },\n    project: {\n      doc_id,\n      project_id\n    },\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  // axios\n  let req = {\n    project_id: project_id,\n    docs_id: doc_id,\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/docs/addBox\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    contents.push({\n      box_id: res.data.box._id,\n      title: res.data.box.title,\n      url: res.data.box.url,\n      method: res.data.box.method,\n      request: res.data.box.request,\n      response: res.data.box.response\n    });\n    editable.push(true);\n    dispatch({\n      data: {\n        contents,\n        editable\n      },\n      type: SAVE_DOCS_CONTENT\n    });\n  }).catch(err => {\n    console.log(err);\n    if (err.response && err.response.data === \"Unauthorized\") {\n      dispatch({\n        data: true,\n        type: PROJECT_ERROR\n      });\n    }\n  });\n};\nexport const settypec = typii => dispatch => {\n  dispatch({\n    data: typii,\n    type: SET_TYPEC\n  });\n};\nexport const deleteBox = indx => dispatch => {\n  let {\n    docs: {\n      editable,\n      contents\n    },\n    project: {\n      project_id\n    },\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  const req = {\n    box_id: contents[indx].box_id,\n    project_id,\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/docs/deleteBox\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    contents.splice(indx, 1);\n    editable.splice(indx, 1);\n    dispatch({\n      data: {\n        contents,\n        editable\n      },\n      type: SAVE_DOCS_CONTENT\n    });\n  }).catch(err => {\n    console.log(err);\n    if (err.response && err.response.data === \"Unauthorized\") {\n      dispatch({\n        data: true,\n        type: PROJECT_ERROR\n      });\n    }\n  });\n};","map":{"version":3,"names":["TOGGLE_EDITABLE","EDIT_DATA","SET_TYPEC","REMOVE_BOX","SAVE_DOCS_CONTENT","PROJECT_ERROR","store","axios","config","toggleedit","indx","dispatch","docs","editable","contents","project","doc_id","project_id","login","user","token","getState","req","user_email","email","post","SERVER","headers","Authorization","then","res","data","success","Error","catch","err","console","log","response","type","editdata","content","typec","addbox","docs_id","push","box_id","box","_id","title","url","method","request","settypec","typii","deleteBox","splice"],"sources":["/Users/pbaid.int/gaffar/client/src/action/actionDocs.js"],"sourcesContent":["import {\n  TOGGLE_EDITABLE,\n  EDIT_DATA,\n  SET_TYPEC,\n  REMOVE_BOX,\n  SAVE_DOCS_CONTENT,\n  PROJECT_ERROR,\n} from \"./actionTypes\";\nimport store from \"../store\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\n\nexport const toggleedit = (indx) => (dispatch) => {\n  let {\n    docs: { editable, contents },\n    project: { doc_id, project_id },\n    login: { user, token },\n  } = store.getState();\n  if (editable[indx] === true) {\n    const req = {\n      ...contents[indx],\n      user_email: user.email,\n      project_id: project_id,\n    };\n    axios\n      .post(config.SERVER + \"/docs/saveBox\", req, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then((res) => {\n        if (res.data.success === false) throw Error(\"Error\");\n      })\n      .catch((err) => {\n        console.log(err);\n        if (err.response && err.response.data === \"Unauthorized\") {\n          dispatch({\n            data: true,\n            type: PROJECT_ERROR,\n          });\n        }\n      });\n  }\n\n  editable[indx] = !editable[indx];\n  dispatch({\n    data: editable,\n    type: TOGGLE_EDITABLE,\n  });\n};\n\nexport const editdata = (content, indx, typec) => (dispatch) => {\n  let contents = store.getState().docs.contents;\n  contents[indx][typec] = content;\n  dispatch({\n    data: contents,\n    type: EDIT_DATA,\n  });\n};\n\nexport const addbox = () => (dispatch) => {\n  let {\n    docs: { contents, editable },\n    project: { doc_id, project_id },\n    login: { user, token },\n  } = store.getState();\n  // axios\n  let req = {\n    project_id: project_id,\n    docs_id: doc_id,\n    user_email: user.email,\n  };\n\n  axios\n    .post(config.SERVER + \"/docs/addBox\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      contents.push({\n        box_id: res.data.box._id,\n        title: res.data.box.title,\n        url: res.data.box.url,\n        method: res.data.box.method,\n        request: res.data.box.request,\n        response: res.data.box.response,\n      });\n      editable.push(true);\n      dispatch({\n        data: {\n          contents,\n          editable,\n        },\n        type: SAVE_DOCS_CONTENT,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response && err.response.data === \"Unauthorized\") {\n        dispatch({\n          data: true,\n          type: PROJECT_ERROR,\n        });\n      }\n    });\n};\n\nexport const settypec = (typii) => (dispatch) => {\n  dispatch({\n    data: typii,\n    type: SET_TYPEC,\n  });\n};\n\nexport const deleteBox = (indx) => (dispatch) => {\n  let {\n    docs: { editable, contents },\n    project: { project_id },\n    login: { user, token },\n  } = store.getState();\n  const req = {\n    box_id: contents[indx].box_id,\n    project_id,\n    user_email: user.email,\n  };\n  axios\n    .post(config.SERVER + \"/docs/deleteBox\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n      contents.splice(indx, 1);\n      editable.splice(indx, 1);\n\n      dispatch({\n        data: {\n          contents,\n          editable,\n        },\n        type: SAVE_DOCS_CONTENT,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response && err.response.data === \"Unauthorized\") {\n        dispatch({\n          data: true,\n          type: PROJECT_ERROR,\n        });\n      }\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}