{"ast":null,"code":"import { ADD_PROJECT, PNAMECHANGE, GET_PROJECTS, LOGIN_SIGNUP_USER } from \"../action/actionTypes\";\nimport store from \"../store\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nexport const addProject = () => dispatch => {\n  let {\n    home: {\n      pname,\n      projects\n    },\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  if (pname === \"\") {\n    return;\n  }\n  // axios request\n  const req = {\n    project_name: pname,\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/project/createProject\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    projects.push({\n      project_id: res.data.resp.project_id,\n      project_name: res.data.resp.project_name\n    });\n    dispatch({\n      data: projects,\n      type: ADD_PROJECT\n    });\n    dispatch({\n      data: \"\",\n      type: PNAMECHANGE\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const pnamechange = name => dispatch => {\n  dispatch({\n    data: name,\n    type: PNAMECHANGE\n  });\n};\nexport const getprojects = () => dispatch => {\n  let {\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  // axios request\n  const req = {\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/project/getProjects\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    let projects = res.data.projects;\n    dispatch({\n      data: projects,\n      type: GET_PROJECTS\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const rename = name => dispatch => {\n  let {\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  const req = {\n    user_email: user.email,\n    name\n  };\n  axios.post(config.SERVER + \"/user/updateName\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    user.name = name;\n    dispatch({\n      data: user,\n      type: LOGIN_SIGNUP_USER\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const updateimg = img => dispatch => {\n  let {\n    user,\n    token\n  } = store.getState().login;\n  const req = {\n    img_id: user.img,\n    img\n  };\n  axios.post(config.SERVER + \"/user/updatePP\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    console.log(res);\n    // user.img = img;\n    // dispatch({\n    //   data: user,\n    //   type: LOGIN_SIGNUP_USER,\n    // });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const acceptInv = (id, name) => dispatch => {\n  let {\n    login: {\n      user,\n      token\n    },\n    home: {\n      projects\n    }\n  } = store.getState();\n  const req = {\n    project_id: id,\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/user/acceptInvite\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    user.invites = user.invites.filter(i => i.project_id !== id);\n    projects.push({\n      project_id: id,\n      project_name: name\n    });\n    dispatch({\n      data: user,\n      type: LOGIN_SIGNUP_USER\n    });\n    dispatch({\n      data: projects,\n      type: GET_PROJECTS\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const rejectInv = (id, name) => dispatch => {\n  let {\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  const req = {\n    project_id: id,\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/user/rejectInvite\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    user.invites = user.invites.filter(i => i.project_id !== id);\n    dispatch({\n      data: user,\n      type: LOGIN_SIGNUP_USER\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"names":["ADD_PROJECT","PNAMECHANGE","GET_PROJECTS","LOGIN_SIGNUP_USER","store","axios","config","addProject","dispatch","home","pname","projects","login","user","token","getState","req","project_name","user_email","email","post","SERVER","headers","Authorization","then","res","data","success","Error","push","project_id","resp","type","catch","err","console","log","pnamechange","name","getprojects","rename","updateimg","img","img_id","acceptInv","id","invites","filter","i","rejectInv"],"sources":["/Users/pbaid.int/collabEye/client/src/action/actionHome.js"],"sourcesContent":["import {\n  ADD_PROJECT,\n  PNAMECHANGE,\n  GET_PROJECTS,\n  LOGIN_SIGNUP_USER,\n} from \"../action/actionTypes\";\nimport store from \"../store\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\n\nexport const addProject = () => (dispatch) => {\n  let {\n    home: { pname, projects },\n    login: { user, token },\n  } = store.getState();\n  if (pname === \"\") {\n    return;\n  }\n  // axios request\n  const req = {\n    project_name: pname,\n    user_email: user.email,\n  };\n\n  axios\n    .post(config.SERVER + \"/project/createProject\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      projects.push({\n        project_id: res.data.resp.project_id,\n        project_name: res.data.resp.project_name,\n      });\n      dispatch({\n        data: projects,\n        type: ADD_PROJECT,\n      });\n      dispatch({\n        data: \"\",\n        type: PNAMECHANGE,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const pnamechange = (name) => (dispatch) => {\n  dispatch({\n    data: name,\n    type: PNAMECHANGE,\n  });\n};\n\nexport const getprojects = () => (dispatch) => {\n  let {\n    login: { user, token },\n  } = store.getState();\n  // axios request\n  const req = {\n    user_email: user.email,\n  };\n\n  axios\n    .post(config.SERVER + \"/project/getProjects\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      let projects = res.data.projects;\n      dispatch({\n        data: projects,\n        type: GET_PROJECTS,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const rename = (name) => (dispatch) => {\n  let {\n    login: { user, token },\n  } = store.getState();\n\n  const req = {\n    user_email: user.email,\n    name,\n  };\n\n  axios\n    .post(config.SERVER + \"/user/updateName\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n      user.name = name;\n      dispatch({\n        data: user,\n        type: LOGIN_SIGNUP_USER,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const updateimg = (img) => (dispatch) => {\n  let { user, token } = store.getState().login;\n\n  const req = {\n    img_id: user.img,\n    img,\n  };\n\n  axios\n    .post(config.SERVER + \"/user/updatePP\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      console.log(res);\n      // user.img = img;\n      // dispatch({\n      //   data: user,\n      //   type: LOGIN_SIGNUP_USER,\n      // });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const acceptInv = (id, name) => (dispatch) => {\n  let {\n    login: { user, token },\n    home: { projects },\n  } = store.getState();\n\n  const req = {\n    project_id: id,\n    user_email: user.email,\n  };\n\n  axios\n    .post(config.SERVER + \"/user/acceptInvite\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      user.invites = user.invites.filter((i) => i.project_id !== id);\n      projects.push({ project_id: id, project_name: name });\n\n      dispatch({\n        data: user,\n        type: LOGIN_SIGNUP_USER,\n      });\n\n      dispatch({\n        data: projects,\n        type: GET_PROJECTS,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const rejectInv = (id, name) => (dispatch) => {\n  let {\n    login: { user, token },\n  } = store.getState();\n\n  const req = {\n    project_id: id,\n    user_email: user.email,\n  };\n\n  axios\n    .post(config.SERVER + \"/user/rejectInvite\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      user.invites = user.invites.filter((i) => i.project_id !== id);\n\n      dispatch({\n        data: user,\n        type: LOGIN_SIGNUP_USER,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}