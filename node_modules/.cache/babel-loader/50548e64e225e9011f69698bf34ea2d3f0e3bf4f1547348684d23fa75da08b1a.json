{"ast":null,"code":"var _jsxFileName = \"/Users/pbaid.int/collabEye/client/src/components/project/Mytasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from '../../styles/components/project/Mytasks.module.css';\nimport Task from \"./board/Task\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Mytasks() {\n  _s();\n  const {\n    tasks\n  } = useSelector(state => state.mytasks);\n  const [popupTask, setpopupTask] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [popupTask !== false ? /*#__PURE__*/_jsxDEV(Task, {\n      item: popupTask,\n      view: setpopupTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mainContainer,\n        children: tasks.sort((a, b) => a.checked - b.checked).map(t => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.taskTile} ${t.checked ? styles.done : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: t.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/eye.png\",\n              alt: \"view\",\n              onClick: () => setpopupTask(t)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Mytasks, \"grXdOBqe24Usd35uaaubMyB0/sI=\", false, function () {\n  return [useSelector];\n});\n_c = Mytasks;\nvar _c;\n$RefreshReg$(_c, \"Mytasks\");","map":{"version":3,"names":["React","useState","styles","Task","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Mytasks","_s","tasks","state","mytasks","popupTask","setpopupTask","children","item","view","fileName","_jsxFileName","lineNumber","columnNumber","className","container","mainContainer","sort","a","b","checked","map","t","taskTile","done","content","src","alt","onClick","id","_c","$RefreshReg$"],"sources":["/Users/pbaid.int/collabEye/client/src/components/project/Mytasks.js"],"sourcesContent":["import React, { useState } from 'react'\nimport styles from '../../styles/components/project/Mytasks.module.css'\nimport Task from \"./board/Task\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Mytasks() {\n  const { tasks } = useSelector((state) => state.mytasks);\n  const [popupTask, setpopupTask] = useState(false);\n\n  return (\n    <>\n      {popupTask !== false ? (\n        <Task item={popupTask} view={setpopupTask} />\n      ) : null}\n\n      <div className={styles.container}>\n        <div className={styles.mainContainer}>\n        \n          {tasks.sort((a, b) => a.checked - b.checked).map(t => {\n            return (\n              <div key={t.id} className={`${styles.taskTile} ${t.checked ? styles.done : \"\"}`}>\n                <p>{t.content}</p>\n                <img\n                  src=\"/eye.png\"\n                  alt=\"view\"\n                  onClick={() => setpopupTask(t)}\n                />\n              </div>\n            )\n          })}\n\n\n        </div>\n      </div>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,oDAAoD;AACvE,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAM,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEK,OAAA,CAAAE,SAAA;IAAAQ,QAAA,GACGF,SAAS,KAAK,KAAK,gBAClBR,OAAA,CAACH,IAAI;MAACc,IAAI,EAAEH,SAAU;MAACI,IAAI,EAAEH;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAC3C,IAAI,eAERhB,OAAA;MAAKiB,SAAS,EAAErB,MAAM,CAACsB,SAAU;MAAAR,QAAA,eAC/BV,OAAA;QAAKiB,SAAS,EAAErB,MAAM,CAACuB,aAAc;QAAAT,QAAA,EAElCL,KAAK,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI;UACpD,oBACEzB,OAAA;YAAgBiB,SAAS,EAAG,GAAErB,MAAM,CAAC8B,QAAS,IAAGD,CAAC,CAACF,OAAO,GAAG3B,MAAM,CAAC+B,IAAI,GAAG,EAAG,EAAE;YAAAjB,QAAA,gBAC9EV,OAAA;cAAAU,QAAA,EAAIe,CAAC,CAACG;YAAO;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBhB,OAAA;cACE6B,GAAG,EAAC,UAAU;cACdC,GAAG,EAAC,MAAM;cACVC,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAACgB,CAAC;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA,GANMS,CAAC,CAACO,EAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOT,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACZ,EAAA,CA/BuBD,OAAO;EAAA,QACXL,WAAW;AAAA;AAAAmC,EAAA,GADP9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}