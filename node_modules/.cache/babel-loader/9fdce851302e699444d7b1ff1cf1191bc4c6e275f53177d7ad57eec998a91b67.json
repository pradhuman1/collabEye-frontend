{"ast":null,"code":"import { SET_PROJECT, PROJECT_ERROR, SET_EXTRAS, SET_EXTRA_VAL } from \"../action/actionTypes\";\nconst initialstate = {\n  project_id: \"\",\n  project_name: \"\",\n  doc_id: \"\",\n  error: false,\n  gitLink: \"\",\n  discLink: \"\",\n  resources: \"\",\n  notes: \"\",\n  is_admin: false\n};\nconst func = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_PROJECT:\n      return {\n        ...state,\n        project_id: action.data.project.id,\n        project_name: action.data.project.name,\n        doc_id: action.data.doc_id\n      };\n    case PROJECT_ERROR:\n      return {\n        ...state,\n        error: action.data\n      };\n    case SET_EXTRAS:\n      return {\n        ...state,\n        ...action.data\n      };\n    case SET_EXTRA_VAL:\n      return {\n        ...state,\n        ...action.data\n      };\n    default:\n      return state;\n  }\n};\nexport default func;","map":{"version":3,"names":["SET_PROJECT","PROJECT_ERROR","SET_EXTRAS","SET_EXTRA_VAL","initialstate","project_id","project_name","doc_id","error","gitLink","discLink","resources","notes","is_admin","func","state","arguments","length","undefined","action","type","data","project","id","name"],"sources":["/Users/pbaid.int/collabEye/client/src/reducer/projectReducer.js"],"sourcesContent":["import { SET_PROJECT, PROJECT_ERROR , SET_EXTRAS, SET_EXTRA_VAL } from \"../action/actionTypes\";\n\nconst initialstate = {\n  project_id: \"\",\n  project_name: \"\",\n  doc_id: \"\",\n  error: false,\n  gitLink:\"\",\n  discLink: \"\",\n  resources: \"\",\n  notes: \"\",\n  is_admin: false\n};\n\nconst func = function (state = initialstate, action) {\n  switch (action.type) {\n    case SET_PROJECT:\n      return {\n        ...state,\n        project_id: action.data.project.id,\n        project_name: action.data.project.name,\n        doc_id: action.data.doc_id,\n      };\n    case PROJECT_ERROR:\n      return {\n        ...state,\n        error: action.data,\n      };\n    case SET_EXTRAS:\n      return {\n        ...state,\n        ...action.data\n      };\n      case SET_EXTRA_VAL:\n        return {\n          ...state,\n          ...action.data\n        };\n    default:\n      return state;\n  }\n};\n\nexport default func;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAGC,UAAU,EAAEC,aAAa,QAAQ,uBAAuB;AAE9F,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EAAE;EACdC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAC,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,IAAI,GAAG,SAAAA,CAAA,EAAwC;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGZ,YAAY;EAAA,IAAEe,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACjD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKpB,WAAW;MACd,OAAO;QACL,GAAGe,KAAK;QACRV,UAAU,EAAEc,MAAM,CAACE,IAAI,CAACC,OAAO,CAACC,EAAE;QAClCjB,YAAY,EAAEa,MAAM,CAACE,IAAI,CAACC,OAAO,CAACE,IAAI;QACtCjB,MAAM,EAAEY,MAAM,CAACE,IAAI,CAACd;MACtB,CAAC;IACH,KAAKN,aAAa;MAChB,OAAO;QACL,GAAGc,KAAK;QACRP,KAAK,EAAEW,MAAM,CAACE;MAChB,CAAC;IACH,KAAKnB,UAAU;MACb,OAAO;QACL,GAAGa,KAAK;QACR,GAAGI,MAAM,CAACE;MACZ,CAAC;IACD,KAAKlB,aAAa;MAChB,OAAO;QACL,GAAGY,KAAK;QACR,GAAGI,MAAM,CAACE;MACZ,CAAC;IACL;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}