{"ast":null,"code":"var _jsxFileName = \"/Users/pbaid.int/gaffar/client/src/components/project/gather/MeetingComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport styles from '../../../styles/components/project/gather/Meeting.module.css';\nimport config from '../../../config.json';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = config.MEETING_SERVER;\nlet socket = null;\nlet connections = {};\nlet socketid = null;\nexport default function MeetingComponent(_ref) {\n  _s();\n  let {\n    leaveMeeting\n  } = _ref;\n  const peerConnectionConfig = {\n    'iceServers': [{\n      'urls': 'stun:stun.l.google.com:19302'\n    }]\n  };\n  const username = useSelector(state => state.login.user.name);\n  const [videoAvailable, setvideoAvailable] = useState(undefined);\n  const [audioAvailable, setaudioAvailable] = useState(undefined);\n  const [triggerConnect, settriggerConnect] = useState(false);\n  const localVideoref = useRef();\n  const [connected, setconnected] = useState(false);\n  const [audio, setaudio] = useState(true);\n  const [video, setvideo] = useState(true);\n  const [screenshare, setscreenshare] = useState(false);\n  useEffect(() => {\n    if (videoAvailable === undefined || audioAvailable === undefined) return;\n    navigator.mediaDevices.getUserMedia({\n      video: videoAvailable,\n      audio: videoAvailable\n    }).then(stream => {\n      window.localStream = stream;\n      localVideoref.current.srcObject = stream;\n    }).then(stream => {}).catch(e => console.log(e));\n  }, [videoAvailable, audioAvailable]);\n  const setCSS = () => {\n    let pinDiv = document.getElementById(\"sessionVideoPin\");\n    if (pinDiv.childElementCount === 1) return setCSSPin();\n    let mainDiv = document.getElementById(\"sessionVideoMain\");\n    const c = mainDiv.childElementCount;\n    pinDiv.style.width = \"0vw\";\n    mainDiv.style.width = \"90vw\";\n    if (c === 1) {\n      mainDiv.style.gridTemplateColumns = \"repeat(1, 1fr)\";\n      mainDiv.childNodes.forEach(child => {\n        child.style.height = \"40vh\";\n      });\n    } else if (c === 2) {\n      mainDiv.style.gridTemplateColumns = \"repeat(2, 1fr)\";\n      mainDiv.childNodes.forEach(child => {\n        child.style.height = \"40vh\";\n      });\n    } else if (c === 3) {\n      mainDiv.style.gridTemplateColumns = \"repeat(3, 1fr)\";\n      mainDiv.childNodes.forEach(child => {\n        child.style.height = \"40vh\";\n      });\n    } else if (c === 4) {\n      mainDiv.style.gridTemplateColumns = \"repeat(2, 1fr)\";\n      mainDiv.childNodes.forEach(child => {\n        child.style.height = \"32vh\";\n      });\n    }\n  };\n  const setCSSPin = () => {\n    let pinDiv = document.getElementById(\"sessionVideoPin\");\n    let mainDiv = document.getElementById(\"sessionVideoMain\");\n    let pin = pinDiv.childNodes[0];\n    pinDiv.style.width = \"60vw\";\n    pin.style.height = \"58vh\";\n    mainDiv.style.gridTemplateColumns = \"repeat(1, 1fr)\";\n    mainDiv.style.width = \"30vw\";\n    mainDiv.childNodes.forEach(child => {\n      child.style.height = \"23vh\";\n    });\n  };\n  const pinToScreen = id => {\n    let pinDiv = document.getElementById(\"sessionVideoPin\");\n    let mainDiv = document.getElementById(\"sessionVideoMain\");\n    let pin = document.querySelector(`[data-id=\"${id}\"]`);\n    let p = document.createElement('p');\n    p.appendChild(document.createTextNode(\"Unpin\"));\n    p.onclick = () => unpinToScreen(id);\n    pin.replaceChild(p, pin.childNodes[0]);\n    p.textContent = \"Unpin\";\n    p.onclick = () => unpinToScreen(id);\n    let count = pinDiv.childElementCount;\n    if (count === 1) {\n      let temp = pinDiv.childNodes[0];\n      let t = document.createElement('p');\n      t.textContent = \"Pin\";\n      t.onclick = () => pinToScreen(temp.getAttribute(\"data-id\"));\n      temp.replaceChild(t, temp.childNodes[0]);\n      temp.parentNode.removeChild(temp);\n      mainDiv.appendChild(temp);\n      pin.parentNode.removeChild(pin);\n      pinDiv.appendChild(pin);\n    } else {\n      pin.parentNode.removeChild(pin);\n      pinDiv.appendChild(pin);\n    }\n    setCSS();\n  };\n  const unpinToScreen = id => {\n    let mainDiv = document.getElementById(\"sessionVideoMain\");\n    let unpin = document.querySelector(`[data-id=\"${id}\"]`);\n    let p = unpin.childNodes[0];\n    p.textContent = \"Pin\";\n    p.onclick = () => pinToScreen(id);\n    unpin.parentNode.removeChild(unpin);\n    mainDiv.appendChild(unpin);\n    setCSS();\n  };\n  const getPermissions = () => {\n    try {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(() => setvideoAvailable(true)).catch(() => setvideoAvailable(false));\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(() => setaudioAvailable(true)).catch(() => setaudioAvailable(false));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const getMedia = () => {\n    connectToSocketServer();\n  };\n  const getUserMedia = () => {\n    if (video && videoAvailable || audio && audioAvailable) {\n      navigator.mediaDevices.getUserMedia({\n        video: video,\n        audio: audio\n      }).then(getUserMediaSuccess).then(stream => {}).catch(e => console.log(e));\n    } else {\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {}\n    }\n  };\n  const getUserMediaSuccess = stream => {\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketid) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        connections[id].setLocalDescription(description).then(() => {\n          socket.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n    stream.getTracks().forEach(track => track.onended = () => {\n      setvideo(false);\n      setaudio(false);\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n      let blackSilence = function () {\n        return new MediaStream([black(...arguments), silence()]);\n      };\n      window.localStream = blackSilence();\n      localVideoref.current.srcObject = window.localStream;\n      for (let id in connections) {\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socket.emit('signal', id, JSON.stringify({\n              'sdp': connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n    });\n  };\n  const getDislayMedia = () => {\n    if (screenshare) {\n      if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        }).then(getDislayMediaSuccess).then(stream => {}).catch(e => console.log(e));\n      }\n    }\n  };\n  const getDislayMediaSuccess = stream => {\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketid) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        connections[id].setLocalDescription(description).then(() => {\n          socket.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n    stream.getTracks().forEach(track => track.onended = () => {\n      setscreenshare(false).then(() => {\n        try {\n          let tracks = localVideoref.current.srcObject.getTracks();\n          tracks.forEach(track => track.stop());\n        } catch (e) {\n          console.log(e);\n        }\n        let blackSilence = function () {\n          return new MediaStream([black(...arguments), silence()]);\n        };\n        window.localStream = blackSilence();\n        localVideoref.current.srcObject = window.localStream;\n        getUserMedia();\n      });\n    });\n  };\n  const gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n    if (fromId !== socketid) {\n      if (signal.sdp) {\n        connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n          if (signal.sdp.type === 'offer') {\n            connections[fromId].createAnswer().then(description => {\n              connections[fromId].setLocalDescription(description).then(() => {\n                socket.emit('signal', fromId, JSON.stringify({\n                  'sdp': connections[fromId].localDescription\n                }));\n              }).catch(e => console.log(e));\n            }).catch(e => console.log(e));\n          }\n        }).catch(e => console.log(e));\n      }\n      if (signal.ice) {\n        connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e));\n      }\n    }\n  };\n  const connectToSocketServer = () => {\n    socket = io.connect(URL);\n    socket.on('signal', gotMessageFromServer);\n    socket.on('connect', () => {\n      socket.emit('join-call', username);\n      socketid = socket.id;\n      socket.on('user-left', id => {\n        let videoChild = document.querySelector(`[data-id=\"${id}\"]`);\n        if (videoChild !== null) {\n          videoChild.parentNode.removeChild(videoChild);\n          setCSS();\n        }\n      });\n      socket.on('user-joined', (id, clients, names) => {\n        clients.forEach(socketListId => {\n          connections[socketListId] = new RTCPeerConnection(peerConnectionConfig);\n          connections[socketListId].onicecandidate = function (event) {\n            if (event.candidate != null) {\n              socket.emit('signal', socketListId, JSON.stringify({\n                'ice': event.candidate\n              }));\n            }\n          };\n          connections[socketListId].onaddstream = event => {\n            let searchVideo = document.querySelector(`[data-socket=\"${socketListId}\"]`);\n            if (searchVideo !== null) {\n              searchVideo.srcObject = event.stream;\n            } else {\n              let main = document.getElementById('sessionVideoMain');\n              let video = document.createElement('video');\n              let div = document.createElement('div');\n              div.setAttribute('data-id', socketListId);\n              video.setAttribute('data-socket', socketListId);\n              video.srcObject = event.stream;\n              video.autoplay = true;\n              video.playsinline = true;\n              let pin = document.createElement('p');\n              pin.appendChild(document.createTextNode(\"Pin\"));\n              pin.onclick = () => pinToScreen(socketListId);\n              let name = document.createElement('p');\n              name.appendChild(document.createTextNode(names[socketListId]));\n              div.appendChild(pin);\n              div.appendChild(video);\n              div.appendChild(name);\n              main.appendChild(div);\n              setCSS();\n            }\n          };\n          if (window.localStream !== undefined && window.localStream !== null) {\n            connections[socketListId].addStream(window.localStream);\n          } else {\n            let blackSilence = function () {\n              return new MediaStream([black(...arguments), silence()]);\n            };\n            window.localStream = blackSilence();\n            connections[socketListId].addStream(window.localStream);\n          }\n        });\n        if (id === socketid) {\n          for (let id2 in connections) {\n            if (id2 === socketid) continue;\n            try {\n              connections[id2].addStream(window.localStream);\n            } catch (e) {}\n            connections[id2].createOffer().then(description => {\n              connections[id2].setLocalDescription(description).then(() => {\n                socket.emit('signal', id2, JSON.stringify({\n                  'sdp': connections[id2].localDescription\n                }));\n              }).catch(e => console.log(e));\n            });\n          }\n        }\n      });\n    });\n  };\n  useEffect(() => {\n    getUserMedia();\n  }, [video, audio]);\n  useEffect(() => {\n    getDislayMedia();\n  }, [screenshare]);\n  const connect = () => settriggerConnect(true);\n  useEffect(() => {\n    if (triggerConnect) getMedia();\n  }, [triggerConnect]);\n  const silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], {\n      enabled: false\n    });\n  };\n  const black = function () {\n    let {\n      width = 640,\n      height = 480\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height\n    });\n    canvas.getContext('2d').fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], {\n      enabled: false\n    });\n  };\n  useEffect(() => {\n    getPermissions();\n    return () => {\n      window.localStream.getTracks().forEach(track => track.stop());\n      if (socket) socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pinContainer,\n        id: \"sessionVideoPin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mainContainer,\n        id: \"sessionVideoMain\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-id\": \"defalut\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => pinToScreen(\"defalut\"),\n            children: \"Pin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"my-video\",\n            ref: localVideoref,\n            autoPlay: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this), (() => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 36\n            }, this);\n          })()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainerCentre,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setaudio(v => !v),\n          src: `/audio-${audio ? \"on\" : \"off\"}.svg`,\n          alt: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setvideo(v => !v),\n          src: `/video-${video ? \"on\" : \"off\"}.svg`,\n          alt: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setscreenshare(v => !v),\n          src: `/screen-share-${screenshare ? \"on\" : \"off\"}.svg`,\n          alt: \"screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: connected ? styles.leave : styles.join,\n          onClick: () => {\n            if (connected) {\n              leaveMeeting();\n            } else {\n              connect();\n              setconnected(true);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: connected ? \"Leave\" : \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 9\n  }, this);\n}\n_s(MeetingComponent, \"gBd65ijIUDfiCPyn04wf0hfUU8g=\", false, function () {\n  return [useSelector];\n});\n_c = MeetingComponent;\nvar _c;\n$RefreshReg$(_c, \"MeetingComponent\");","map":{"version":3,"names":["useEffect","useRef","useState","io","styles","config","useSelector","jsxDEV","_jsxDEV","URL","MEETING_SERVER","socket","connections","socketid","MeetingComponent","_ref","_s","leaveMeeting","peerConnectionConfig","username","state","login","user","name","videoAvailable","setvideoAvailable","undefined","audioAvailable","setaudioAvailable","triggerConnect","settriggerConnect","localVideoref","connected","setconnected","audio","setaudio","video","setvideo","screenshare","setscreenshare","navigator","mediaDevices","getUserMedia","then","stream","window","localStream","current","srcObject","catch","e","console","log","setCSS","pinDiv","document","getElementById","childElementCount","setCSSPin","mainDiv","c","style","width","gridTemplateColumns","childNodes","forEach","child","height","pin","pinToScreen","id","querySelector","p","createElement","appendChild","createTextNode","onclick","unpinToScreen","replaceChild","textContent","count","temp","t","getAttribute","parentNode","removeChild","unpin","getPermissions","getMedia","connectToSocketServer","getUserMediaSuccess","tracks","getTracks","track","stop","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","localDescription","onended","blackSilence","MediaStream","black","arguments","silence","getDislayMedia","getDisplayMedia","getDislayMediaSuccess","gotMessageFromServer","fromId","message","signal","parse","sdp","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","connect","on","videoChild","clients","names","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","searchVideo","main","div","setAttribute","autoplay","playsinline","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","length","canvas","getContext","fillRect","captureStream","getVideoTracks","disconnect","className","container","children","mainWrapper","pinContainer","fileName","_jsxFileName","lineNumber","columnNumber","mainContainer","onClick","ref","autoPlay","muted","buttonContainer","buttonContainerCentre","v","src","alt","leave","join","_c","$RefreshReg$"],"sources":["/Users/pbaid.int/gaffar/client/src/components/project/gather/MeetingComponent.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\nimport io from 'socket.io-client'\nimport styles from '../../../styles/components/project/gather/Meeting.module.css'\nimport config from '../../../config.json'\nimport { useSelector } from 'react-redux'\n\nconst URL = config.MEETING_SERVER\n\nlet socket = null\nlet connections = {}\nlet socketid = null\n\nexport default function MeetingComponent({ leaveMeeting }) {\n    const peerConnectionConfig = {\n        'iceServers': [\n            { 'urls': 'stun:stun.l.google.com:19302' },\n        ]\n    }\n\n    const username = useSelector((state) => state.login.user.name);\n\n    const [videoAvailable, setvideoAvailable] = useState(undefined)\n    const [audioAvailable, setaudioAvailable] = useState(undefined)\n    const [triggerConnect, settriggerConnect] = useState(false)\n\n    const localVideoref = useRef()\n\n    const [connected, setconnected] = useState(false)\n    const [audio, setaudio] = useState(true)\n    const [video, setvideo] = useState(true)\n    const [screenshare, setscreenshare] = useState(false)\n\n    useEffect(() => {\n        if (videoAvailable === undefined || audioAvailable === undefined) return\n\n        navigator.mediaDevices.getUserMedia({ video: videoAvailable, audio: videoAvailable })\n            .then((stream) => {\n                window.localStream = stream\n                localVideoref.current.srcObject = stream\n            })\n            .then((stream) => { })\n            .catch((e) => console.log(e))\n\n    }, [videoAvailable, audioAvailable])\n\n    const setCSS = () => {\n        let pinDiv = document.getElementById(\"sessionVideoPin\")\n\n        if (pinDiv.childElementCount === 1) return setCSSPin()\n\n        let mainDiv = document.getElementById(\"sessionVideoMain\")\n        const c = mainDiv.childElementCount\n\n        pinDiv.style.width = \"0vw\"\n        mainDiv.style.width = \"90vw\"\n\n        if (c === 1) {\n            mainDiv.style.gridTemplateColumns = \"repeat(1, 1fr)\";\n\n            mainDiv.childNodes.forEach(child => {\n                child.style.height = \"40vh\"\n            })\n        } else if (c === 2) {\n            mainDiv.style.gridTemplateColumns = \"repeat(2, 1fr)\";\n\n            mainDiv.childNodes.forEach(child => {\n                child.style.height = \"40vh\"\n            })\n        } else if (c === 3) {\n            mainDiv.style.gridTemplateColumns = \"repeat(3, 1fr)\";\n\n            mainDiv.childNodes.forEach(child => {\n                child.style.height = \"40vh\"\n            })\n        } else if (c === 4) {\n            mainDiv.style.gridTemplateColumns = \"repeat(2, 1fr)\";\n\n            mainDiv.childNodes.forEach(child => {\n                child.style.height = \"32vh\";\n            })\n        }\n    }\n\n    const setCSSPin = () => {\n        let pinDiv = document.getElementById(\"sessionVideoPin\")\n        let mainDiv = document.getElementById(\"sessionVideoMain\")\n\n        let pin = pinDiv.childNodes[0]\n\n        pinDiv.style.width = \"60vw\"\n        pin.style.height = \"58vh\"\n\n        mainDiv.style.gridTemplateColumns = \"repeat(1, 1fr)\"\n        mainDiv.style.width = \"30vw\"\n        mainDiv.childNodes.forEach(child => {\n            child.style.height = \"23vh\"\n        })\n    }\n\n    const pinToScreen = id => {\n        let pinDiv = document.getElementById(\"sessionVideoPin\")\n        let mainDiv = document.getElementById(\"sessionVideoMain\")\n        let pin = document.querySelector(`[data-id=\"${id}\"]`)\n\n        let p = document.createElement('p')\n        p.appendChild(document.createTextNode(\"Unpin\"))\n        p.onclick = () => unpinToScreen(id)\n\n        pin.replaceChild(p, pin.childNodes[0])\n\n        p.textContent = \"Unpin\"\n        p.onclick = () => unpinToScreen(id)\n\n        let count = pinDiv.childElementCount\n\n        if (count === 1) {\n            let temp = pinDiv.childNodes[0]\n\n            let t = document.createElement('p')\n            t.textContent = \"Pin\"\n            t.onclick = () => pinToScreen(temp.getAttribute(\"data-id\"))\n            temp.replaceChild(t, temp.childNodes[0])\n\n            temp.parentNode.removeChild(temp)\n            mainDiv.appendChild(temp)\n\n            pin.parentNode.removeChild(pin)\n            pinDiv.appendChild(pin)\n        } else {\n            pin.parentNode.removeChild(pin)\n            pinDiv.appendChild(pin)\n        }\n\n        setCSS()\n    }\n\n    const unpinToScreen = id => {\n        let mainDiv = document.getElementById(\"sessionVideoMain\")\n        let unpin = document.querySelector(`[data-id=\"${id}\"]`)\n\n        let p = unpin.childNodes[0]\n\n        p.textContent = \"Pin\"\n        p.onclick = () => pinToScreen(id)\n\n        unpin.parentNode.removeChild(unpin)\n        mainDiv.appendChild(unpin)\n\n        setCSS()\n    }\n\n    const getPermissions = () => {\n        try {\n            navigator.mediaDevices.getUserMedia({ video: true })\n                .then(() => setvideoAvailable(true))\n                .catch(() => setvideoAvailable(false))\n\n            navigator.mediaDevices.getUserMedia({ audio: true })\n                .then(() => setaudioAvailable(true))\n                .catch(() => setaudioAvailable(false))\n        } catch (e) { console.log(e) }\n    }\n\n    const getMedia = () => {\n        connectToSocketServer()\n    }\n\n    const getUserMedia = () => {\n        if ((video && videoAvailable) || (audio && audioAvailable)) {\n            navigator.mediaDevices.getUserMedia({ video: video, audio: audio })\n                .then(getUserMediaSuccess)\n                .then((stream) => { })\n                .catch((e) => console.log(e))\n        } else {\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { }\n        }\n    }\n\n    const getUserMediaSuccess = (stream) => {\n        try {\n            window.localStream.getTracks().forEach(track => track.stop())\n        } catch (e) { console.log(e) }\n\n        window.localStream = stream\n        localVideoref.current.srcObject = stream\n\n        for (let id in connections) {\n            if (id === socketid) continue\n\n            connections[id].addStream(window.localStream)\n\n            connections[id].createOffer().then((description) => {\n                connections[id].setLocalDescription(description)\n                    .then(() => {\n                        socket.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                    })\n                    .catch(e => console.log(e))\n            })\n        }\n\n        stream.getTracks().forEach(track => track.onended = () => {\n            setvideo(false)\n            setaudio(false)\n\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { console.log(e) }\n\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n            window.localStream = blackSilence()\n            localVideoref.current.srcObject = window.localStream\n\n            for (let id in connections) {\n                connections[id].addStream(window.localStream)\n\n                connections[id].createOffer().then((description) => {\n                    connections[id].setLocalDescription(description)\n                        .then(() => {\n                            socket.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                        })\n                        .catch(e => console.log(e))\n                })\n            }\n        })\n    }\n\n    const getDislayMedia = () => {\n        if (screenshare) {\n            if (navigator.mediaDevices.getDisplayMedia) {\n                navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n                    .then(getDislayMediaSuccess)\n                    .then((stream) => { })\n                    .catch((e) => console.log(e))\n            }\n        }\n    }\n\n    const getDislayMediaSuccess = (stream) => {\n        try {\n            window.localStream.getTracks().forEach(track => track.stop())\n        } catch (e) { console.log(e) }\n\n        window.localStream = stream\n        localVideoref.current.srcObject = stream\n\n        for (let id in connections) {\n            if (id === socketid) continue\n\n            connections[id].addStream(window.localStream)\n\n            connections[id].createOffer().then((description) => {\n                connections[id].setLocalDescription(description)\n                    .then(() => {\n                        socket.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                    })\n                    .catch(e => console.log(e))\n            })\n        }\n\n        stream.getTracks().forEach(track => track.onended = () => {\n            setscreenshare(false)\n                .then(() => {\n                    try {\n                        let tracks = localVideoref.current.srcObject.getTracks()\n                        tracks.forEach(track => track.stop())\n                    } catch (e) { console.log(e) }\n\n                    let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n                    window.localStream = blackSilence()\n                    localVideoref.current.srcObject = window.localStream\n\n                    getUserMedia()\n                })\n        })\n    }\n\n    const gotMessageFromServer = (fromId, message) => {\n        var signal = JSON.parse(message)\n\n        if (fromId !== socketid) {\n            if (signal.sdp) {\n                connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n                    if (signal.sdp.type === 'offer') {\n                        connections[fromId].createAnswer().then((description) => {\n                            connections[fromId].setLocalDescription(description).then(() => {\n                                socket.emit('signal', fromId, JSON.stringify({ 'sdp': connections[fromId].localDescription }))\n                            }).catch(e => console.log(e))\n                        }).catch(e => console.log(e))\n                    }\n                }).catch(e => console.log(e))\n            }\n\n            if (signal.ice) {\n                connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e))\n            }\n        }\n    }\n\n    const connectToSocketServer = () => {\n        socket = io.connect(URL)\n\n        socket.on('signal', gotMessageFromServer)\n\n        socket.on('connect', () => {\n            socket.emit('join-call', username)\n            socketid = socket.id\n\n            socket.on('user-left', (id) => {\n                let videoChild = document.querySelector(`[data-id=\"${id}\"]`)\n\n                if (videoChild !== null) {\n                    videoChild.parentNode.removeChild(videoChild)\n\n                    setCSS()\n                }\n            })\n\n            socket.on('user-joined', (id, clients, names) => {\n                clients.forEach((socketListId) => {\n                    connections[socketListId] = new RTCPeerConnection(peerConnectionConfig)\n\n                    connections[socketListId].onicecandidate = function (event) {\n                        if (event.candidate != null) {\n                            socket.emit('signal', socketListId, JSON.stringify({ 'ice': event.candidate }))\n                        }\n                    }\n\n                    connections[socketListId].onaddstream = (event) => {\n                        let searchVideo = document.querySelector(`[data-socket=\"${socketListId}\"]`)\n                        if (searchVideo !== null) {\n                            searchVideo.srcObject = event.stream\n                        } else {\n                            let main = document.getElementById('sessionVideoMain')\n                            let video = document.createElement('video')\n                            let div = document.createElement('div')\n\n                            div.setAttribute('data-id', socketListId)\n\n                            video.setAttribute('data-socket', socketListId)\n                            video.srcObject = event.stream\n                            video.autoplay = true\n                            video.playsinline = true\n\n                            let pin = document.createElement('p')\n                            pin.appendChild(document.createTextNode(\"Pin\"))\n                            pin.onclick = () => pinToScreen(socketListId)\n\n                            let name = document.createElement('p')\n                            name.appendChild(document.createTextNode(names[socketListId]))\n\n                            div.appendChild(pin)\n                            div.appendChild(video)\n                            div.appendChild(name)\n\n                            main.appendChild(div)\n\n                            setCSS()\n                        }\n                    }\n\n                    if (window.localStream !== undefined && window.localStream !== null) {\n                        connections[socketListId].addStream(window.localStream)\n                    } else {\n                        let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n                        window.localStream = blackSilence()\n                        connections[socketListId].addStream(window.localStream)\n                    }\n                })\n\n                if (id === socketid) {\n                    for (let id2 in connections) {\n                        if (id2 === socketid) continue\n\n                        try {\n                            connections[id2].addStream(window.localStream)\n                        } catch (e) { }\n\n                        connections[id2].createOffer().then((description) => {\n                            connections[id2].setLocalDescription(description)\n                                .then(() => {\n                                    socket.emit('signal', id2, JSON.stringify({ 'sdp': connections[id2].localDescription }))\n                                })\n                                .catch(e => console.log(e))\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    useEffect(() => {\n        getUserMedia()\n    }, [video, audio])\n\n    useEffect(() => {\n        getDislayMedia()\n    }, [screenshare])\n\n    const connect = () => settriggerConnect(true)\n\n    useEffect(() => {\n        if (triggerConnect)\n            getMedia()\n    }, [triggerConnect])\n\n    const silence = () => {\n        let ctx = new AudioContext()\n        let oscillator = ctx.createOscillator()\n        let dst = oscillator.connect(ctx.createMediaStreamDestination())\n        oscillator.start()\n        ctx.resume()\n        return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false })\n    }\n\n    const black = ({ width = 640, height = 480 } = {}) => {\n        let canvas = Object.assign(document.createElement(\"canvas\"), { width, height })\n        canvas.getContext('2d').fillRect(0, 0, width, height)\n        let stream = canvas.captureStream()\n        return Object.assign(stream.getVideoTracks()[0], { enabled: false })\n    }\n\n    useEffect(() => {\n        getPermissions()\n\n        return () => {\n            window.localStream.getTracks().forEach(track => track.stop())\n\n            if (socket) socket.disconnect()\n        }\n    }, [])\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.mainWrapper}>\n                <div className={styles.pinContainer} id=\"sessionVideoPin\"></div>\n                <div className={styles.mainContainer} id=\"sessionVideoMain\">\n                    <div data-id=\"defalut\">\n                        <p onClick={() => pinToScreen(\"defalut\")}>Pin</p>\n                        <video id=\"my-video\" ref={localVideoref} autoPlay muted />\n                        {(() => {\n                            return <p>{username}</p>\n                        })()}\n                    </div>\n                </div>\n            </div>\n\n            <div className={styles.buttonContainer}>\n                <div className={styles.buttonContainerCentre}>\n                    <img onClick={() => setaudio(v => !v)} src={`/audio-${audio ? \"on\" : \"off\"}.svg`} alt=\"audio\" />\n                    <img onClick={() => setvideo(v => !v)} src={`/video-${video ? \"on\" : \"off\"}.svg`} alt=\"video\" />\n                    <img onClick={() => setscreenshare(v => !v)} src={`/screen-share-${screenshare ? \"on\" : \"off\"}.svg`} alt=\"screen\" />\n                    <div className={connected ? styles.leave : styles.join} onClick={() => {\n                        if (connected) {\n                            leaveMeeting()\n                        } else {\n                            connect()\n                            setconnected(true)\n                        }\n                    }}>\n                        <p>{connected ? \"Leave\" : \"Join\"}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}