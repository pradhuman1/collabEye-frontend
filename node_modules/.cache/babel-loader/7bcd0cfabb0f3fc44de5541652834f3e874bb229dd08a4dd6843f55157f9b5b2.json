{"ast":null,"code":"import { LIST_OPEN_BOARD, LIST_SET_FULL, LIST_SET_BOARD, LIST_ADD_ITEM } from './../action/actionTypes';\nconst initialstate = {\n  list: {},\n  board: {}\n};\nconst func = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LIST_SET_BOARD:\n      return {\n        ...state,\n        board: action.data\n      };\n    case LIST_OPEN_BOARD:\n      return {\n        ...state,\n        board_id: action.data\n      };\n    case LIST_ADD_ITEM:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          ...action.data.list\n        },\n        board: {\n          ...state.board,\n          ...action.data.board\n        }\n      };\n    case LIST_SET_FULL:\n      return {\n        ...state,\n        ...action.data\n      };\n    default:\n      return state;\n  }\n};\nexport default func;","map":{"version":3,"names":["LIST_OPEN_BOARD","LIST_SET_FULL","LIST_SET_BOARD","LIST_ADD_ITEM","initialstate","list","board","func","state","arguments","length","undefined","action","type","data","board_id"],"sources":["/Users/pbaid.int/collabEye/client/src/reducer/listReducer.js"],"sourcesContent":["import { LIST_OPEN_BOARD, LIST_SET_FULL, LIST_SET_BOARD, LIST_ADD_ITEM } from './../action/actionTypes'\n\nconst initialstate = {\n    list: {},\n    board: {}\n}\n\nconst func = function (state = initialstate, action) {\n    switch (action.type) {\n        case LIST_SET_BOARD:\n            return {\n                ...state,\n                board: action.data\n            }\n        case LIST_OPEN_BOARD:\n            return {\n                ...state,\n                board_id: action.data\n            }\n        case LIST_ADD_ITEM:\n            return {\n                ...state,\n                list: {...state.list, ...action.data.list},\n                board: {...state.board, ...action.data.board}\n            }\n        case LIST_SET_FULL:\n            return {\n                ...state,\n                ...action.data\n            }\n        default:\n            return state;\n    }\n}\n\nexport default func"],"mappings":"AAAA,SAASA,eAAe,EAAEC,aAAa,EAAEC,cAAc,EAAEC,aAAa,QAAQ,yBAAyB;AAEvG,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,CAAC,CAAC;EACRC,KAAK,EAAE,CAAC;AACZ,CAAC;AAED,MAAMC,IAAI,GAAG,SAAAA,CAAA,EAAwC;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKX,cAAc;MACf,OAAO;QACH,GAAGM,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAClB,CAAC;IACL,KAAKd,eAAe;MAChB,OAAO;QACH,GAAGQ,KAAK;QACRO,QAAQ,EAAEH,MAAM,CAACE;MACrB,CAAC;IACL,KAAKX,aAAa;MACd,OAAO;QACH,GAAGK,KAAK;QACRH,IAAI,EAAE;UAAC,GAAGG,KAAK,CAACH,IAAI;UAAE,GAAGO,MAAM,CAACE,IAAI,CAACT;QAAI,CAAC;QAC1CC,KAAK,EAAE;UAAC,GAAGE,KAAK,CAACF,KAAK;UAAE,GAAGM,MAAM,CAACE,IAAI,CAACR;QAAK;MAChD,CAAC;IACL,KAAKL,aAAa;MACd,OAAO;QACH,GAAGO,KAAK;QACR,GAAGI,MAAM,CAACE;MACd,CAAC;IACL;MACI,OAAON,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}