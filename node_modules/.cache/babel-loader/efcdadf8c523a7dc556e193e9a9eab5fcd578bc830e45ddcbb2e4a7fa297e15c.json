{"ast":null,"code":"import { APPEND_MESSAGES, SET_MESSAGES } from \"../action/actionTypes\";\nimport store from \"../store\";\nimport config from \"../config.json\";\nimport axios from \"axios\";\nexport const appendMessage = message => dispatch => {\n  dispatch({\n    data: message,\n    type: APPEND_MESSAGES\n  });\n};\nexport const deleteMessage = message => dispatch => {\n  let {\n    gather: {\n      messages\n    }\n  } = store.getState();\n  messages = messages.filter(m => m.message_id !== message);\n  dispatch({\n    data: messages,\n    type: SET_MESSAGES\n  });\n};","map":{"version":3,"names":["APPEND_MESSAGES","SET_MESSAGES","store","config","axios","appendMessage","message","dispatch","data","type","deleteMessage","gather","messages","getState","filter","m","message_id"],"sources":["/Users/pbaid.int/gaffar/client/src/action/actionGather.js"],"sourcesContent":["import { APPEND_MESSAGES, SET_MESSAGES } from \"../action/actionTypes\";\n\nimport store from \"../store\";\nimport config from \"../config.json\";\n\nimport axios from \"axios\";\n\nexport const appendMessage = (message) => dispatch => {\n    dispatch({\n        data: message,\n        type: APPEND_MESSAGES,\n    })\n}\n\nexport const deleteMessage = (message) => dispatch => {\n    let {\n        gather: { messages },\n      } = store.getState();\n\n     messages = messages.filter((m) => m.message_id !== message);\n    dispatch({\n        data: messages,\n        type: SET_MESSAGES,\n    })\n}"],"mappings":"AAAA,SAASA,eAAe,EAAEC,YAAY,QAAQ,uBAAuB;AAErE,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAIC,OAAO,IAAKC,QAAQ,IAAI;EAClDA,QAAQ,CAAC;IACLC,IAAI,EAAEF,OAAO;IACbG,IAAI,EAAET;EACV,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMU,aAAa,GAAIJ,OAAO,IAAKC,QAAQ,IAAI;EAClD,IAAI;IACAI,MAAM,EAAE;MAAEC;IAAS;EACrB,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,CAAC;EAErBD,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,KAAKV,OAAO,CAAC;EAC5DC,QAAQ,CAAC;IACLC,IAAI,EAAEI,QAAQ;IACdH,IAAI,EAAER;EACV,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}