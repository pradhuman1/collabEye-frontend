{"ast":null,"code":"import { PROJECT_ERROR, MAKE_ADMIN } from \"../action/actionTypes\";\nimport store from \"../store\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nexport const invite = email => dispatch => {};\nexport const makeAdmin = indx => dispatch => {\n  const {\n    project: {\n      project_id\n    },\n    member: {\n      members\n    },\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  //\n  const req = {\n    project_id: project_id,\n    user_id: members[indx].user_id,\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/project/makeAdmin\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    const newmembers = members;\n    newmembers[indx].is_admin = true;\n    console.log(res);\n    dispatch({\n      data: newmembers,\n      type: MAKE_ADMIN\n    });\n  }).catch(err => {\n    console.log(err);\n    if (err.response && err.response.data === \"Unauthorized\") {\n      dispatch({\n        data: true,\n        type: PROJECT_ERROR\n      });\n    }\n  });\n};\nexport const changeRole = (indx, role) => dispatch => {\n  const {\n    project: {\n      project_id\n    },\n    member: {\n      members\n    },\n    login: {\n      user,\n      token\n    }\n  } = store.getState();\n  //\n  const req = {\n    project_id: project_id,\n    user_id: members[indx].user_id,\n    new_role: role,\n    user_email: user.email\n  };\n  axios.post(config.SERVER + \"/project/changeRole\", req, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    if (res.data.success === false) throw Error(\"Error\");\n    const newmembers = members;\n    newmembers[indx].user_role = role;\n    // console.log(res);\n    dispatch({\n      data: newmembers,\n      type: MAKE_ADMIN\n    });\n  }).catch(err => {\n    console.log(err);\n    if (err.response && err.response.data === \"Unauthorized\") {\n      dispatch({\n        data: true,\n        type: PROJECT_ERROR\n      });\n    }\n  });\n};","map":{"version":3,"names":["PROJECT_ERROR","MAKE_ADMIN","store","axios","config","invite","email","dispatch","makeAdmin","indx","project","project_id","member","members","login","user","token","getState","req","user_id","user_email","post","SERVER","headers","Authorization","then","res","data","success","Error","newmembers","is_admin","console","log","type","catch","err","response","changeRole","role","new_role","user_role"],"sources":["/Users/pbaid.int/gaffar/client/src/action/actionMembers.js"],"sourcesContent":["import { PROJECT_ERROR, MAKE_ADMIN } from \"../action/actionTypes\";\nimport store from \"../store\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nexport const invite = (email) => (dispatch) => {};\nexport const makeAdmin = (indx) => (dispatch) => {\n  const {\n    project: { project_id },\n    member: { members },\n    login: { user, token },\n  } = store.getState();\n  //\n  const req = {\n    project_id: project_id,\n    user_id: members[indx].user_id,\n    user_email: user.email,\n  };\n\n  axios\n    .post(config.SERVER + \"/project/makeAdmin\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      const newmembers = members;\n      newmembers[indx].is_admin = true;\n      console.log(res);\n      dispatch({\n        data: newmembers,\n        type: MAKE_ADMIN,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response && err.response.data === \"Unauthorized\") {\n        dispatch({\n          data: true,\n          type: PROJECT_ERROR,\n        });\n      }\n    });\n};\n\nexport const changeRole = (indx, role) => (dispatch) => {\n  const {\n    project: { project_id },\n    member: { members },\n    login: { user, token },\n  } = store.getState();\n  //\n  const req = {\n    project_id: project_id,\n    user_id: members[indx].user_id,\n    new_role: role,\n    user_email: user.email,\n  };\n\n  axios\n    .post(config.SERVER + \"/project/changeRole\", req, {\n      headers: {\n        Authorization: token,\n      },\n    })\n    .then((res) => {\n      if (res.data.success === false) throw Error(\"Error\");\n\n      const newmembers = members;\n      newmembers[indx].user_role = role;\n      // console.log(res);\n      dispatch({\n        data: newmembers,\n        type: MAKE_ADMIN,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response && err.response.data === \"Unauthorized\") {\n        dispatch({\n          data: true,\n          type: PROJECT_ERROR,\n        });\n      }\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}